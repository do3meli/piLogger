#!/bin/bash 

this_dir=$(cd `dirname $0`; pwd)
this_script=$(basename $0)

. $this_dir/functions
. $this_dir/functions-sqlite3

#--------------------------------
# usage()
#--------------------------------
usage(){
cat<<EOT

Usage:

  $this_script [ --type=type ] [ alias | /path/to/device ] [ temperature ]

  type = {temperature, humidity, blinks, etc} (default is temperature)

Example

  $this_script deviceAddress                              # will get the temperature from the "deviceAddress" sensor
  $this_script deviceAddress 27.5                         # will add the temperature 27.5 to the "deviceAddress" sensor
  $this_script --type=humidity deviceAddress 50           # will add the humidity 50 to the "deviceAddress" sensor

EOT
}

#================================
# MAIN
#================================
[ -z "$1" ] && { usage ; exit 1 ; }

metricType=temperature

case $1 in
  --type*)
    metricType=${1#*=}
    shift
    ;;
esac

action=none
[ -n "$1" ] && action=readSensor
[ -n "$2" ] && action=noreadSensor

#--- check the device
case $action in
  readSensor)
    #--- get the deviceId and temperature
    curDevice=$(getDeviceIdByAny "$1")
    [ -z "$curDevice" ] && { errorExit "There is no device $1" ; }
    curTemperature=$(getTemperature "$curDevice")
    [ -z "$curTemperature" ] && errorExit "Could not read temperature from $curDevice"
    ;;
  noreadSensor)
    #--- no existing device (external device) -> then a temperature has to be passed as well
    curDevice=$1
    curTemperature=$2
    ;;
  *)
    errorExit "No action"
    ;;
esac

logIt "  - Logging data for device $curDevice, $curTemperature C"

#--- at this point, there HAS to be a device, and there has to be a temperature
logTemperature $curDevice $curTemperature $metricType
