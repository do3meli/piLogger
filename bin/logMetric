#!/bin/bash 

this_dir=$(cd `dirname $0`; pwd)
this_script=$(basename $0)

. $this_dir/functions
. $this_dir/functions-sqlite3

#--------------------------------
# usage()
#--------------------------------
usage(){
cat<<EOT

Usage:

  $this_script [ --type=type ] [ alias | /path/to/sensor ] [ temperature ]

  type = {temperature, humidity, blinks, etc} (default is temperature)

Example

  $this_script sensorAddress                              # will get the temperature from the "sensorAddress" sensor
  $this_script sensorAddress 27.5                         # will add the temperature 27.5 to the "sensorAddress" sensor
  $this_script --type=humidity sensorAddress 50           # will add the humidity 50 to the "sensorAddress" sensor

EOT
}

#================================
# MAIN
#================================
[ -z "$1" ] && { usage ; exit 1 ; }

metricType=temperature

case $1 in
  --type*)
    metricType=${1#*=}
    shift
    ;;
esac

action=none
[ -n "$1" ] && action=readSensor
[ -n "$2" ] && action=noreadSensor

#--- check the sensor
case $action in
  readSensor)
    #--- get the sensorId and temperature
    curSensor=$(getSensorIdByAny "$1")
    [ -z "$curSensor" ] && { errorExit "There is no sensor $1" ; }
    curValue=$(getMetricValue "$curSensor" "$metricType")
    [ -z "$curValue" ] && errorExit "Could not read temperature from $curSensor"
    ;;
  noreadSensor)
    #--- no existing sensor (external sensor) -> then a temperature has to be passed as well
    curSensor=$1
    curValue=$2
    ;;
  *)
    errorExit "No action"
    ;;
esac

logIt "  - Logging data for sensor $curSensor,metricType=$metricType - value =>  $curValue"

#--- at this point, there HAS to be a sensor, and there has to be a temperature
logTemperature $curSensor $curValue $metricType
