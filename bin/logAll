#!/bin/bash

this_dir=$(cd `dirname $0`; pwd)
this_script=$(basename $0)
spoolDir=/var/spool/piLogger

. $this_dir/functions
. $this_dir/functions-sqlite3

#--------------------------------
# usage()
#--------------------------------
usage(){
cat<<EOT

Usage:

  $this_script --db                 - Log active sensors in the database 
  $this_script --active             - Log active sensors in the database 

  $this_script --logDisabled         - Log all sensors in the database
  $this_script --all                 - Log all sensors in the database

EOT
}

#================================
# MAIN
#================================
[ -z "$1" ] && { usage ; exit 1 ; }

  case $1 in
    --db|--active)
      aliases=$(dbGetAllLocalAndActiveSensorAndMetricIds)
      compositeSensors="$(dbGetAllCompositeSensors)"
      ;;
    --help|-h)
      usage
      exit 1
      ;;
    --logDisabled|--all)
      aliases=$(dbGetAllLocalSensorAndMetricIds)
      compositeSensors="$(dbGetAllCompositeSensors)"
      ;;
    *)
      usage
      exit 1
      ;;
  esac



  # if we have any files in the spool directory we have to call the corresponding function to clear it
  [ $(find $spoolDir -type f | wc -l) -gt 0 ] && { logIt "$spoolDir is not Empty"; callSpoolerFunctions; } || logIt "$spoolDir is empty - no need to call corresponding functions"

  # log temperature for all local sensors
  [ -z "$parallelProcessing" ] && parallelProcessing=1
  #echo $aliases | xargs -L1 -n 1 -P${parallelProcessing} $this_dir/logMetric --type=temperature 
  echo $aliases | xargs -n 2 -P${parallelProcessing} bash -c $this_dir'/logMetric --type=$1 $0' 
  
  # process all compositeSensors
  for compositeSensor in $compositeSensors
  do
    curTemp=$($this_dir/getComposite $compositeSensor)
    $this_dir/logMetric $compositeSensor $curTemp
  done
  
