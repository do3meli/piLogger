#---------------------------------
# dbGetDBFileByAlias()
#---------------------------------
dbGetDBFileByAlias(){
  local curDeviceId=$(dbGetDeviceIdByDeviceAlias "$1")
  echo $rrdDir/${curDeviceId}.rrd
}
#---------------------------------
# dbGetDeviceIdByDeviceAlias()
#---------------------------------
dbGetDeviceIdByDeviceAlias(){
  sqlite3 $appDbFile<<EOT
  select id from alias where alias = '$1'; 
EOT
}
#---------------------------------
# dbGetAliasesFromDeviceGroup()
#---------------------------------
dbGetAliasesFromDeviceGroup(){
  sqlite3 $appDbFile<<EOT
  select a.alias from alias a, devicegroup b where a.id = b.device_id and b.groupname = '$1';
EOT
}



#---------------------------------
# dbGetAliasesFromPlotGroup()
#---------------------------------
dbGetAliasesFromPlotGroup(){
  sqlite3 $appDbFile<<EOT
  select a.alias from alias a, plotgroup b where a.id = b.device_id and b.groupname = '$1';
EOT
}

#---------------------------------
# dbGetDeviceIdsFromPlotGroup()
#---------------------------------
dbGetDeviceIdsFromPlotGroup(){
  sqlite3 $appDbFile<<EOT
  select device_id from plotgroup where groupname = '$1';
EOT
}


#---------------------------------
# dbGetAllDeviceGroups()
#---------------------------------
dbGetAllDeviceGroups(){
  sqlite3 $appDbFile<<EOT
  select distinct groupname from devicegroup;
EOT
}

#---------------------------------
# dbGetAllPlotGroups()
#---------------------------------
dbGetAllPlotGroups(){
  sqlite3 $appDbFile<<EOT
  select distinct groupname from plotgroup;
EOT
}

#---------------------------------
# dbGetAggregateTypeByPlotDeviceAlias
#---------------------------------
dbGetAggregateTypeByPlotDeviceAlias(){
  local curAggregate=$(
  sqlite3 $appDbFile<<EOT
  select plot_type from plotgroup a, alias b where a.groupname = '$1' and b.alias  = '$2' and a.device_id = b.id;
EOT
)

  [ -n "$curAggregate" ] && { echo "$curAggregate" ; return 0 ; }
  [ -z "$curAggregate" ] && { echo "AVERAGE" ; return 0 ; }
}

#---------------------------------
# dbGetAllDeviceIds()
#---------------------------------
dbGetAllDeviceIds(){
  sqlite3 $appDbFile<<EOT
  select id from device;
EOT
}

#---------------------------------
# dbGetAllDevicePaths()
#---------------------------------
dbGetAllDevicePaths(){
  sqlite3 $appDbFile<<EOT
  select path from device where path <> '';
EOT
}

#---------------------------------
# dbGetDeviceAliasById()
#---------------------------------
dbGetDeviceAliasById(){
  curRes=$(sqlite3 $appDbFile<<EOT
  select alias from alias where id = '$1';
EOT
)

  if [ -n "$curRes" ]
  then
    echo "$curRes"
  else
    echo "$1"
  fi
}


#---------------------------------
# dbGetDevicePathByDeviceAlias()
#---------------------------------
function dbGetDevicePathByDeviceAlias(){
  local alias="$1"
  local res=$(
    sqlite3 $appDbFile<<EOT
    select a.path from device a, alias b where a.id = b.id and b.alias = '$alias' limit 1;
EOT
)

  if [ -n "$res" ]
  then
    echo "$res"
  fi
}

#---------------------------------
# dbGetDeviceAliasByDevicePath()
#---------------------------------
dbGetDeviceAliasByDevicePath(){
  curRes=$(sqlite3 $appDbFile<<EOT
  select a.alias from alias a, device b where b.path = '$1' and a.id = b.id;
EOT
)

  if [ -n "$curRes" ]
  then
    echo "$curRes"
  else
    echo "$1"
  fi
}



#---------------------------------
# dbAddDevice()
#---------------------------------
dbAddDevice(){
  echo "  - Adding device: $1 type: $2 path: $3"
  sqlite3 $appDbFile<<EOT
  insert into device (id, type, path) values ('$1', '$2', '$3');
EOT
}

#---------------------------------
# dbRemoveDevice()
#---------------------------------
dbRemoveDevice(){
  echo "  - Removing device: $1"
  sqlite3 $appDbFile<<EOT
  delete from device where id = '$1';
EOT
}

#---------------------------------
# dbAddDeviceAlias()
#---------------------------------
dbAddDeviceAlias(){
  echo "  - Adding device alias: $1 -> $2"
  sqlite3 $appDbFile<<EOT
  insert into alias (id, alias) values ('$1', '$2');
EOT
}

#---------------------------------
# dbRemoveDeviceAlias()
#---------------------------------
function dbRemoveDeviceAlias(){
  local id="$1"
  local alias="$2"
  echo "  - Removing device alias: $1 $2"
  sqlite3 $appDbFile<<EOT
  delete from alias where alias = '$2';
EOT
}


#---------------------------------
# dbGetPlotGroups()
#---------------------------------
dbGetPlotGroups(){
  sqlite3 $appDbFile<<EOT
  select distinct groupname from plotgroup;
EOT
}

#---------------------------------
# dbGetPlotGroupMemberIdsByPlotGroupId()
#---------------------------------
dbGetPlotGroupMemberIdsByPlotGroupId(){
  sqlite3 $appDbFile<<EOT
  select device_id from plotgroup where groupname = '$1';
EOT
}

#---------------------------------
# dbPrintPrintGroups()
#---------------------------------
dbPrintPlotGroups(){
  for dpapg_plotgroup in $(dbGetAllPlotGroups)
  do
    printf "%-20s :" $dpapg_plotgroup 
    for dpapg_curDeviceId in $(dbGetPlotGroupMemberIdsByPlotGroupId $dpapg_plotgroup)
    do
      dpapg_curDeviceAlias=$(dbGetDeviceAliasById $dpapg_curDeviceId)
      #echo -n " $dpapg_curDeviceId($dpapg_curDeviceAlias)"
      echo -n " $dpapg_curDeviceAlias"
    done
    echo
  done
}

#---------------------------------
# dbAddDeviceIdToPlotGroup()
#---------------------------------
dbAddDeviceIdToPlotGroup(){
  echo "  - Adding device id to plotgroup: $1 -> $2"
  sqlite3 $appDbFile<<EOT
  insert into plotgroup (groupname, device_id) values ('$1', '$2');
EOT
}

#---------------------------------
# dbAddDeviceAliasToPlotGroup()
#---------------------------------
dbAddDeviceAliasToPlotGroup(){
  echo "  - Adding device alias: $1 -> $2"
  dbAddDeviceIdToPlotGroup $1 $(dbGetDeviceIdByDeviceAlias $2)
}

#---------------------------------
# dbRemoveDeviceIdFromPlotGroup()
#---------------------------------
dbRemoveDeviceIdFromPlotGroup(){
  echo "  - Removing device id from plotgroup: $1 -> $2"
  sqlite3 $appDbFile<<EOT
  delete from plotgroup where groupname = '$1' and device_id = '$2';
EOT
}

#---------------------------------
# dbRemoveDeviceAliasFromPlotGroup()
#---------------------------------
dbRemoveDeviceAliasFromPlotGroup(){
  echo "  - Removing device alias from plotgroup: $1 -> $2"
  dbRemoveDeviceIdFromPlotGroup $1 $(dbGetDeviceIdByDeviceAlias $2)
}


#---------------------------------
# dbSetupDatabase()
#---------------------------------
function dbSetupDatabase(){
  local tables="device alias devicegroup plotgroup plotconfig"
  local table=""

  for table in $tables
  do
    if dbCheckTableExist $table
    then
      echo "    - Table $table exists"    
    else
      echo "    - Table $table does not exist -> creating"
      dbCreateTableFromDDLFile $table
    fi
  done
    
}


#---------------------------------
# dbCheckTableExist()
#---------------------------------
function dbCheckTableExist(){
  local tableName="$1"
  local res=$(
  sqlite3 $appDbFile<<EOT
      select count(name) from sqlite_master where type='table' and name = '$tableName';
EOT
)

  if [ $res -eq 1 ]
  then
    return 0
  else
    return 1
  fi

}

#---------------------------------
# dbCheckDeviceExistById()
#---------------------------------
function dbCheckDeviceExistById(){

  local deviceId="$1"
  local res=$(
  sqlite3 $appDbFile<<EOT
      select count(id) from device where id = '$deviceId';
EOT
)

  if [ $res -eq 1 ]
  then
    return 0
  else
    return 1
  fi

}

#---------------------------------
# dbCreateTableFromDDLFile()
#---------------------------------
function dbCreateTableFromDDLFile(){
  local tableName="$1"
  echo "      - Creating table $tableName from ddl.sql"
  [ ! -f $baseDir/db/ddl.sql ] && { echo "Error: ddl.sql not found in $baseDir/db/ddl.sql" 1>&2 ; exit 1 ; }
  local ddlStatement=$(grep "create table $tableName " $baseDir/db/ddl.sql)

  [ -z "$ddlStatement" ] && { echo "Error: table $tableName not found in $baseDir/db/ddl.sql" 1>&2 ; exit 1; }

  sqlite3 $appDbFile<<EOT
$ddlStatement
EOT

}
