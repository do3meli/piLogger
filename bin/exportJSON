#!/bin/bash

this_dir=$(cd `dirname $0`;pwd)
this_script=$(basename $0)
. $this_dir/functions

exportTime=24h

#---------------------------------
# printUsage()
#---------------------------------
usage(){
  cat<<EOT

$this_script graph_name <from date> <to date>

Example:

$this_script all.graph.20h "20131224 00:30:00" "20131224 23:59:59"

EOT
}
#=================================
# MAIN
#=================================
graphName=$1
[ -z "$graphName" ] && graphName=default

#logIt "* Generating graph $graphName from: $fromDate to: $toDate"

#[ ! -d "$oneWireDataDir/xml" ] && { errorExit "Could not find $oneWireDataDir/xml" ; }
TS=$(date "$dateFormat")

fromDateEpoc=$(date -d "$fromDate" "+%s")
toDateEpoc=$(date -d "$toDate" "+%s")

curAliases=$(getAliasesFromGraphTemplate $graphName)
[ -z "$curAliases" ] && curAliases=$(getAllDeviceNames $oneWireDir | grep -v "/81")

printf "["
curComma=" "
for curAlias in $curAliases
do
  printf '%s\n{"sensor":"'%s'", "temperature":[' "${curComma}" ${curAlias}
  curVName=$(echo $curAlias | sed -e 's/\.//g')
  rrdtool xport -s now-${exportTime} -e now --step 300  \
      DEF:${curVName}=$(getDBFileByAlias $curAlias):temperature:AVERAGE \
      XPORT:${curVName}:$curVName | grep "<row>" | grep -v "NaN" | perl -ne 'm!.*t>(.*)</t><v>(.*?)</v>!; printf "%.2f,", $2*1;' | sed -e 's/,$//'
  curComma=","
  printf "]}"
done
printf "\n]"

