#!/bin/bash

this_dir=$(cd `dirname $0`; pwd)
. $this_dir/functions

all_devices=$(getAllDevices /mnt/1wire)

#--------------------------------
# usage()
#--------------------------------
usage(){
  cat<<EOT

Uage:

  `basename $0` [options]

Options:

  -a|--aliases     - Show aliases for devices
  -af|--aliasFile  - generate a dummy alias file output

EOT
}
#--------------------------------
# printNormal
#--------------------------------
printNormal(){
  for device in  $all_devices
  do
    echo "$device"
  done
}

#--------------------------------
# printWithAliases
#--------------------------------
printWithAliases(){
  for device in $all_devices
  do
    deviceType=$(getDeviceTypeByDevicePath $device)
    deviceAliases="$(getDeviceAliasesByDevicePath `basename $device`)"
    echo "Device: $device Type: $deviceType Device Aliases: $deviceAliases"
  done
}

printAliasFileFormat(){
  n=1
  for device in $all_devices
  do
    echo "alias${n};1wire;$device"
    ((n+=1))
  done
}

printJSON(){
  printf '['
  local prependComma=""
  for device in $all_devices
  do
    pj_deviceName=$(basename $device)
    pj_deviceAliases=$(getDeviceAliasesByDevicePath $device | sed -e 's/ $//' -e 's/ /","/g')
    printf "%s" "$prependComma"
    printf '\n{ "sensorName":"'${pj_deviceName}'", "devicePath":"'$device'" , "aliases":["'$pj_deviceAliases'"]}'
    prependComma=","
  done
  printf '\n]\n'
}

#====================================
# MAIN
#====================================

[ -z "$1" ] && printNormal

while [ -n "$1" ]
do
  case $1 in
    -a|--aliases)
       printWithAliases
       shift
       ;;
    --aliasFile|-af)
      printAliasFileFormat
      shift
      ;;
    --json|-j)
      printJSON
      shift
      ;;
    *)
      usage
      exit
      ;;
  esac 
done
