#!/bin/bash

#export debug=true
bin_dir=/home/pi/piLogger/bin

#===========================================
# Functions
#===========================================
function usage(){

  cat <<EOT

  $this_script all get path 
  http://pilogger/api/sensor/all/get/path

  $this_script [SENSOR_NAME|all]  [get|set] [temperature|humidity] 
  http://pilogger/api/sensor/{SENSOR_NAME|all}/{get|set}/temperature
  http://pilogger/api/sensor/{SENSOR_NAME|all}/{get|set}/humidity
  
EOT
	
	
}

function htmlUsage(){

	cat<<EOT

	<html>
	<head>
	</head>
	<body>
	<h1>sensor</h1>
	</body>
	</html>
EOT

}


#===========================================
# Parse options or URL
#===========================================


#--- read tokens
OLD_IFS=$IFS
IFS="/"
[ -n "$PATH_INFO" ] && { set $PATH_INFO ; shift ; callType=html ; }

[ -z "$par1" ] && par1=$1
[ -z "$par2" ] && par2=$2
[ -z "$par3" ] && par3=$3
[ -z "$par4" ] && par4=$4

[ -n "$debug" ] && {
cat 1>&2<<EOT
par1=$par1
par2=$par2
par3=$par3
par4=$par4
EOT
}

#--- api:
#            par1       par2        par3           par4
#  - /api/sensor/{sensorName|all}/get/path
#  - /api/sensor/{sensorName|all}/{get|set}/temperature/[temperature]
#  - /api/sensor/{sensorName|all}/info

#--- example url:
#
# http://pilogger.kmggruop.ch/api/sensor/all/info
# http://pilogger.kmggruop.ch/api/sensor/all/info



[[ -z "$1" && -n "${callType}" ]] && { usageHtml ; exit 0 ; }
[[ -z "$1" && -z "${callType}" ]] && { usage ; exit 0 ; }

[ -z "$par2" ] && exit 0

case $par2 in
  get)
      [ -n "$debug" ] && echo "par2=get" 1>&2

      case $par3 in
        path)
          case $par1 in
            all) /home/pi/piLogger/bin/listDevices --json ;;
              *) echo "Not yet implemented" ;;
          esac
          ;;

        temperature)
          case $par1 in
            all) echo "Not yet implemented" ;;
              *)
                /home/pi/piLogger/bin/getTemperature -rrd $par1
              ;;
          esac
          ;;
        info)
            case $par1 in
              all) /home/pi/piLogger/bin/listDevices --json --info ;;
                *) echo "Not yet implemented" ;;
            esac
          ;;
      esac

    ;;
  set)
      case $par3 in
        temperature)
            [ -z "$par4" ] && { echo "Error: No temperature passed as parameter" 1>&2 ; exit 1 ; }
            echo "Setting temperature for $par1 -> $par4 C"
            /home/pi/piLogger/bin/logTemperature $par1 $par4
            exit 0
          ;;
      esac
    ;;
  info)
    case $par1 in
      all) /home/pi/piLogger/bin/listDevices --json --info ;;
        *) echo "Not yet implemented" ;;
    esac
  ;;
esac

exit

if [ -n "$par2" ]
then
  #--- implemented features
  #  - temperature
  #  - path

  case $par2 in
    info)
      case $par1 in
        all) /home/pi/piLogger/bin/listDevices --json --info ;;
          *) echo "Not yet implemented" ;;
      esac
    ;;
    path)
      case $par1 in
        all) /home/pi/piLogger/bin/listDevices --json ;;
          *) echo "Not yet implemented" ;;
      esac
    ;;
    temperature)
      case $par1 in
        all) echo "Not yet implemented" ;;
          *)
            /home/pi/piLogger/bin/getTemperature $par1
          ;;
      esac
    ;;
    *)
      echo "Not yet implemented"
    ;;
  esac
fi
